AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31
Description: >
  photo-app-users-rest-api-sam

  Sample SAM Template for photo-app-users-rest-api-sam

# More info about Globals: https://github.com/awslabs/serverless-application-model/blob/master/docs/globals.rst
Globals:
  Function:
    Timeout: 20
    Runtime: java11
    Architectures:
      - x86_64
    MemorySize: 512
    Environment:
      Variables:
        MY_COGNITO_POOL_APP_CLIENT_ID: AQICAHgb1LCGn4TG6EUD24qMGMxr1MpHehp7VYQ+Ycib9n468QH8LhneYKGtOf3sUsZfERqbAAAAeDB2BgkqhkiG9w0BBwagaTBnAgEAMGIGCSqGSIb3DQEHATAeBglghkgBZQMEAS4wEQQMzSdoUmKL0BLm3k58AgEQgDV+qZ2ZACNaglCNBSE/JiJmjXW6dAlVJ29kQL8t8vTCL9Elz3nHifrNVLIIjXays3u3Y0ADkg==
        MY_COGNITO_POOL_APP_CLIENT_SECRET: AQICAHgb1LCGn4TG6EUD24qMGMxr1MpHehp7VYQ+Ycib9n468QGaLDd8NTXDgglY7Rtku+3VAAAAlTCBkgYJKoZIhvcNAQcGoIGEMIGBAgEAMHwGCSqGSIb3DQEHATAeBglghkgBZQMEAS4wEQQMxCgYVMXuLatUq35xAgEQgE9lr7WFmLszglLF77a800IAuh3ECo25YNiIRPTm2wkGCRK8zRq5aW8lpJlPzFGLwRWb2i9XYGawmruZ9yL5TZngaLPYzcmo6xcJ5c5SYTf+
        MY_COGNITO_POOL_ID: AQICAHgb1LCGn4TG6EUD24qMGMxr1MpHehp7VYQ+Ycib9n468QGivNTSwtMqCjikIbWFwSARAAAAcTBvBgkqhkiG9w0BBwagYjBgAgEAMFsGCSqGSIb3DQEHATAeBglghkgBZQMEAS4wEQQMG8yUmP/xUzHA61ZiAgEQgC7OzNOHidFtxKtTQRVNvl/LWedVQZMaLRoJftaBEX97usQlM92YMYsHGu43yXDG

Resources:
  MyApi:
    Type: AWS::Serverless::Api
    Properties:
      StageName: Prod
      DefinitionBody:
        Fn::Transform:
          Name: AWS::Include
          Parameters:
            Location: open-api.yaml
  CreateUserHandlerFunction:
    Type: AWS::Serverless::Function # More info about Function Resource: https://github.com/awslabs/serverless-application-model/blob/master/versions/2016-10-31.md#awsserverlessfunction
    Properties:
      CodeUri: PhotoAppUsersApi
      Handler: peltonen.oskari.photoapp.users.CreateUserHandler::handleRequest
      Events:
        CreateUser:
          Type: Api # More info about API Event Source: https://github.com/awslabs/serverless-application-model/blob/master/versions/2016-10-31.md#api
          Properties:
            Path: /users
            Method: post
            RestApiId:
              Ref: MyApi
  ConfirmUserHandlerFunction:
    Type: AWS::Serverless::Function # More info about Function Resource: https://github.com/awslabs/serverless-application-model/blob/master/versions/2016-10-31.md#awsserverlessfunction
    Properties:
      CodeUri: PhotoAppUsersApi
      Handler: peltonen.oskari.photoapp.users.ConfirmUserHandler::handleRequest
      Events:
        ConfirmUser:
          Type: Api # More info about API Event Source: https://github.com/awslabs/serverless-application-model/blob/master/versions/2016-10-31.md#api
          Properties:
            Path: /confirm
            Method: post
            RestApiId:
              Ref: MyApi
  LoginUserHandlerFunction:
    Type: AWS::Serverless::Function # More info about Function Resource: https://github.com/awslabs/serverless-application-model/blob/master/versions/2016-10-31.md#awsserverlessfunction
    Properties:
      CodeUri: PhotoAppUsersApi
      Handler: peltonen.oskari.photoapp.users.LoginUserHandler::handleRequest
      Events:
        LoginUser:
          Type: Api # More info about API Event Source: https://github.com/awslabs/serverless-application-model/blob/master/versions/2016-10-31.md#api
          Properties:
            Path: /login
            Method: post
            RestApiId:
              Ref: MyApi
  AddUserToGroupHandlerFunction:
    Type: AWS::Serverless::Function # More info about Function Resource: https://github.com/awslabs/serverless-application-model/blob/master/versions/2016-10-31.md#awsserverlessfunction
    Properties:
      CodeUri: PhotoAppUsersApi
      Handler: peltonen.oskari.photoapp.users.AddUserToGroupHandler::handleRequest
      Policies:
        - Version: '2012-10-17'
          Statement:
            - Effect: Allow
              Action:
                - 'cognito-idp:AdminAddUserToGroup'
              Resource: "arn:aws:cognito-idp:eu-west-3:658866588047:userpool/eu-west-3_beHjQZByD"
      Events:
        AddUserToGroup:
          Type: Api # More info about API Event Source: https://github.com/awslabs/serverless-application-model/blob/master/versions/2016-10-31.md#api
          Properties:
            Path: /users/{userName}/add-to-group
            Method: post
            RestApiId:
              Ref: MyApi
  GetUserHandlerFunction:
    Type: AWS::Serverless::Function # More info about Function Resource: https://github.com/awslabs/serverless-application-model/blob/master/versions/2016-10-31.md#awsserverlessfunction
    Properties:
      CodeUri: PhotoAppUsersApi
      Handler: peltonen.oskari.photoapp.users.GetUserHandler::handleRequest
      Events:
        GetUser:
          Type: Api # More info about API Event Source: https://github.com/awslabs/serverless-application-model/blob/master/versions/2016-10-31.md#api
          Properties:
            Path: /users/me
            Method: get
            RestApiId:
              Ref: MyApi
Outputs:
  # ServerlessRestApi is an implicit API created out of Events key under Serverless::Function
  # Find out more about other implicit resources you can reference within SAM
  # https://github.com/awslabs/serverless-application-model/blob/master/docs/internals/generated_resources.rst#api
  PhotoAppUsersApi:
    Description: "An API endpoint to create a new User"
    Value: !Sub "https://${MyApi}.execute-api.${AWS::Region}.amazonaws.com/Prod/users/"
  CreateUserHandlerFunction:
    Description: "CreateUserHandlerFunction ARN"
    Value: !GetAtt CreateUserHandlerFunction.Arn
  CreateUserHandlerFunctionIamRole:
    Description: "Implicit IAM Role created for CreateUserHandlerFunction"
    Value: !GetAtt CreateUserHandlerFunctionRole.Arn
